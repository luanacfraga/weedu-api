import { CreateActionDto } from '../../application/dtos/create-action.dto';
import { ActionService } from '../../application/services/action.service';
export declare class ActionController {
    private readonly actionService;
    constructor(actionService: ActionService);
    create(createActionDto: CreateActionDto): Promise<{
        companyId: string;
        managerId: string;
        id: string;
        createdAt: Date;
        updatedAt: Date;
        deletedAt: Date | null;
        title: string;
        description: string;
        problem: string;
        actionPlan: string;
        why: string | null;
        observation: string | null;
        startDate: Date;
        endDate: Date;
        creatorId: string;
        checklist: string | null;
        actualStartDate: Date | null;
        actualEndDate: Date | null;
        status: import(".prisma/client").$Enums.ActionStatus;
    }>;
    start(id: string): Promise<{
        companyId: string;
        managerId: string;
        id: string;
        createdAt: Date;
        updatedAt: Date;
        deletedAt: Date | null;
        title: string;
        description: string;
        problem: string;
        actionPlan: string;
        why: string | null;
        observation: string | null;
        startDate: Date;
        endDate: Date;
        creatorId: string;
        checklist: string | null;
        actualStartDate: Date | null;
        actualEndDate: Date | null;
        status: import(".prisma/client").$Enums.ActionStatus;
    }>;
    complete(id: string): Promise<{
        companyId: string;
        managerId: string;
        id: string;
        createdAt: Date;
        updatedAt: Date;
        deletedAt: Date | null;
        title: string;
        description: string;
        problem: string;
        actionPlan: string;
        why: string | null;
        observation: string | null;
        startDate: Date;
        endDate: Date;
        creatorId: string;
        checklist: string | null;
        actualStartDate: Date | null;
        actualEndDate: Date | null;
        status: import(".prisma/client").$Enums.ActionStatus;
    }>;
    findAll(companyId: string): Promise<{
        companyId: string;
        managerId: string;
        id: string;
        createdAt: Date;
        updatedAt: Date;
        deletedAt: Date | null;
        title: string;
        description: string;
        problem: string;
        actionPlan: string;
        why: string | null;
        observation: string | null;
        startDate: Date;
        endDate: Date;
        creatorId: string;
        checklist: string | null;
        actualStartDate: Date | null;
        actualEndDate: Date | null;
        status: import(".prisma/client").$Enums.ActionStatus;
    }[]>;
    findTodayActions(companyId: string): Promise<{
        companyId: string;
        managerId: string;
        id: string;
        createdAt: Date;
        updatedAt: Date;
        deletedAt: Date | null;
        title: string;
        description: string;
        problem: string;
        actionPlan: string;
        why: string | null;
        observation: string | null;
        startDate: Date;
        endDate: Date;
        creatorId: string;
        checklist: string | null;
        actualStartDate: Date | null;
        actualEndDate: Date | null;
        status: import(".prisma/client").$Enums.ActionStatus;
    }[]>;
    findOne(id: string): Promise<{
        companyId: string;
        managerId: string;
        id: string;
        createdAt: Date;
        updatedAt: Date;
        deletedAt: Date | null;
        title: string;
        description: string;
        problem: string;
        actionPlan: string;
        why: string | null;
        observation: string | null;
        startDate: Date;
        endDate: Date;
        creatorId: string;
        checklist: string | null;
        actualStartDate: Date | null;
        actualEndDate: Date | null;
        status: import(".prisma/client").$Enums.ActionStatus;
    }>;
}
